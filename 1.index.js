(window.webpackJsonp=window.webpackJsonp||[]).push([[1],[,function(e,a){const n=10;function o(e,a){const n=e.length,o=Math.floor(n*a[0]),s=Math.ceil(n*a[1]);return e.slice(o,s)}onmessage=(async({data:e})=>{const{id:a,reason:s,payload:t}=e;if(!a)return;const{renderData:r,renderCache:l,range:i,lines:c}=t,p=function(e,a){const n={x:o(e.x,a),linesByName:{},max:0};Object.entries(e.linesByName).forEach(([e,{color:s,values:t}])=>{n.linesByName[e]={values:o(t,a),color:s}});const s=Object.values(n.linesByName).reduce((e,{values:a})=>Math.max.apply(null,[...a,e]),0);return n.max=s,Object.values(n.linesByName).forEach(e=>{e.renderValues=function(e,a){return e.map(e=>e/a)}(e.values,s)}),n}(r,i);let m;if("RANGE"===s)return void postMessage({id:a,reason:s,payload:p});m={linesByName:{},max:0},l&&(Object.entries(l.linesByName).forEach(([e,{renderValues:a,color:n}])=>{m.linesByName[e]={renderValues:[...a],interpolationSteps:[],opacity:1,color:n}}),m.max=l.max),c&&c.forEach(({name:e,color:a})=>{m.linesByName[e]={renderValues:p.linesByName[e].renderValues.map(e=>e+1),interpolationSteps:[],opacity:0,opacityStep:1/n,color:a}});const u=function*(e,a){Object.entries(e.linesByName).forEach(([e,o])=>{const s=a.linesByName[e];o.renderValues.forEach((e,a)=>{const t=s?s.renderValues[a]-e:1,r=t/n;o.interpolationSteps.push(r),o.opacityStep=s?1/n:-1/n})});for(let o=1;o<n-1;o++){const s={x:[...a.x],max:e.max+o*(a.max-e.max)/n,linesByName:{}};Object.entries(e.linesByName).forEach(([e,{renderValues:a,interpolationSteps:n,color:t,opacity:r,opacityStep:l}])=>{s.linesByName[e]={renderValues:a.map((e,a)=>e+n[a]*o),opacity:Math.min(r+l*o,1),color:t}}),yield s}}(m,p);for(let e of u)postMessage({id:a,reason:s,payload:e});postMessage({id:a,reason:s,payload:p})})}]]);